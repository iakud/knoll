// Code generated by protoc-gen-go-nrpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-nrpc v1.0.0
// - protoc             v6.30.2
// source: example.proto

package example

import (
	context "context"
	nrpc "github.com/iakud/knoll/nrpc"
)

const (
	Example_Test_FullMethodName = "/example.Example/Test"
)

type ExampleClient interface {
	Test(ctx context.Context, in *TestRequest) (*TestReply, error)
}

type exampleClient struct {
	cc nrpc.ClientConnInterface
}

func NewExampleClient(cc nrpc.ClientConnInterface) ExampleClient {
	return &exampleClient{cc}
}

func (c *exampleClient) Test(ctx context.Context, in *TestRequest) (*TestReply, error) {
	out := new(TestReply)
	err := c.cc.Invoke(ctx, Example_Test_FullMethodName, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type ExampleServer interface {
	Test(context.Context, *TestRequest) (*TestReply, error)
}

func RegisterExampleServer(s nrpc.ServiceRegistrar, srv ExampleServer) {
	s.RegisterService(&Example_ServiceDesc, srv)
}

func _Example_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(TestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	return srv.(ExampleServer).Test(ctx, in)
}

var Example_ServiceDesc = nrpc.ServiceDesc{
	ServiceName: "example.Example",
	HandlerType: (*ExampleServer)(nil),
	Methods: []nrpc.MethodDesc{
		{
			MethodName: "Test",
			Handler:    _Example_Test_Handler,
		},
	},
	Metadata: "example.proto",
}
