// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.30.2
// source: knet.proto

package knetpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Msg int32

const (
	Msg_INVALID          Msg = 0
	Msg_OK               Msg = 1
	Msg_ERROR            Msg = 2
	Msg_HANDSHAKE        Msg = 3
	Msg_PING             Msg = 4
	Msg_PONG             Msg = 5
	Msg_KICKED_OUT_NTF   Msg = 11
	Msg_KICK_OUT         Msg = 12
	Msg_USER_ONLINE      Msg = 13
	Msg_USER_OFFLINE_NTF Msg = 14
	Msg_RESERVED_END     Msg = 100
)

// Enum value maps for Msg.
var (
	Msg_name = map[int32]string{
		0:   "INVALID",
		1:   "OK",
		2:   "ERROR",
		3:   "HANDSHAKE",
		4:   "PING",
		5:   "PONG",
		11:  "KICKED_OUT_NTF",
		12:  "KICK_OUT",
		13:  "USER_ONLINE",
		14:  "USER_OFFLINE_NTF",
		100: "RESERVED_END",
	}
	Msg_value = map[string]int32{
		"INVALID":          0,
		"OK":               1,
		"ERROR":            2,
		"HANDSHAKE":        3,
		"PING":             4,
		"PONG":             5,
		"KICKED_OUT_NTF":   11,
		"KICK_OUT":         12,
		"USER_ONLINE":      13,
		"USER_OFFLINE_NTF": 14,
		"RESERVED_END":     100,
	}
)

func (x Msg) Enum() *Msg {
	p := new(Msg)
	*p = x
	return p
}

func (x Msg) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Msg) Descriptor() protoreflect.EnumDescriptor {
	return file_knet_proto_enumTypes[0].Descriptor()
}

func (Msg) Type() protoreflect.EnumType {
	return &file_knet_proto_enumTypes[0]
}

func (x Msg) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Error struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Code        int32                  `protobuf:"varint,1,opt,name=Code"`
	xxx_hidden_Message     *string                `protobuf:"bytes,2,opt,name=Message"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_knet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.xxx_hidden_Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *Error) SetCode(v int32) {
	x.xxx_hidden_Code = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Error) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Error) HasCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Error) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Error) ClearCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Code = 0
}

func (x *Error) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Message = nil
}

type Error_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Code    *int32
	Message *string
}

func (b0 Error_builder) Build() *Error {
	m0 := &Error{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Code != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Code = *b.Code
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Message = b.Message
	}
	return m0
}

type ClientHandshake struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Hash        uint64                 `protobuf:"varint,1,opt,name=Hash"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ClientHandshake) Reset() {
	*x = ClientHandshake{}
	mi := &file_knet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientHandshake) ProtoMessage() {}

func (x *ClientHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClientHandshake) GetHash() uint64 {
	if x != nil {
		return x.xxx_hidden_Hash
	}
	return 0
}

func (x *ClientHandshake) SetHash(v uint64) {
	x.xxx_hidden_Hash = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ClientHandshake) HasHash() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ClientHandshake) ClearHash() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Hash = 0
}

type ClientHandshake_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Hash *uint64
}

func (b0 ClientHandshake_builder) Build() *ClientHandshake {
	m0 := &ClientHandshake{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Hash != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Hash = *b.Hash
	}
	return m0
}

type ServerHandshake struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Hash        uint64                 `protobuf:"varint,1,opt,name=Hash"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ServerHandshake) Reset() {
	*x = ServerHandshake{}
	mi := &file_knet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerHandshake) ProtoMessage() {}

func (x *ServerHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServerHandshake) GetHash() uint64 {
	if x != nil {
		return x.xxx_hidden_Hash
	}
	return 0
}

func (x *ServerHandshake) SetHash(v uint64) {
	x.xxx_hidden_Hash = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ServerHandshake) HasHash() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ServerHandshake) ClearHash() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Hash = 0
}

type ServerHandshake_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Hash *uint64
}

func (b0 ServerHandshake_builder) Build() *ServerHandshake {
	m0 := &ServerHandshake{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Hash != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Hash = *b.Hash
	}
	return m0
}

type Ping struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_knet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Ping_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Ping_builder) Build() *Ping {
	m0 := &Ping{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Pong struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pong) Reset() {
	*x = Pong{}
	mi := &file_knet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Pong_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Pong_builder) Build() *Pong {
	m0 := &Pong{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type KickedOutNotify struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Message     *string                `protobuf:"bytes,1,opt,name=Message"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *KickedOutNotify) Reset() {
	*x = KickedOutNotify{}
	mi := &file_knet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickedOutNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickedOutNotify) ProtoMessage() {}

func (x *KickedOutNotify) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KickedOutNotify) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *KickedOutNotify) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *KickedOutNotify) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *KickedOutNotify) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Message = nil
}

type KickedOutNotify_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Message *string
}

func (b0 KickedOutNotify_builder) Build() *KickedOutNotify {
	m0 := &KickedOutNotify{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Message = b.Message
	}
	return m0
}

type KickOutRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UserId      uint64                 `protobuf:"varint,1,opt,name=UserId"`
	xxx_hidden_UserConnId  uint64                 `protobuf:"varint,2,opt,name=UserConnId"`
	xxx_hidden_Message     *string                `protobuf:"bytes,3,opt,name=Message"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *KickOutRequest) Reset() {
	*x = KickOutRequest{}
	mi := &file_knet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickOutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOutRequest) ProtoMessage() {}

func (x *KickOutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KickOutRequest) GetUserId() uint64 {
	if x != nil {
		return x.xxx_hidden_UserId
	}
	return 0
}

func (x *KickOutRequest) GetUserConnId() uint64 {
	if x != nil {
		return x.xxx_hidden_UserConnId
	}
	return 0
}

func (x *KickOutRequest) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *KickOutRequest) SetUserId(v uint64) {
	x.xxx_hidden_UserId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *KickOutRequest) SetUserConnId(v uint64) {
	x.xxx_hidden_UserConnId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *KickOutRequest) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *KickOutRequest) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *KickOutRequest) HasUserConnId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *KickOutRequest) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *KickOutRequest) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UserId = 0
}

func (x *KickOutRequest) ClearUserConnId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserConnId = 0
}

func (x *KickOutRequest) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Message = nil
}

type KickOutRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	UserId     *uint64
	UserConnId *uint64
	Message    *string
}

func (b0 KickOutRequest_builder) Build() *KickOutRequest {
	m0 := &KickOutRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_UserId = *b.UserId
	}
	if b.UserConnId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_UserConnId = *b.UserConnId
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Message = b.Message
	}
	return m0
}

type KickOutReply struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KickOutReply) Reset() {
	*x = KickOutReply{}
	mi := &file_knet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickOutReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOutReply) ProtoMessage() {}

func (x *KickOutReply) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type KickOutReply_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 KickOutReply_builder) Build() *KickOutReply {
	m0 := &KickOutReply{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type UserOnlineRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UserId      uint64                 `protobuf:"varint,1,opt,name=UserId"`
	xxx_hidden_UserConnId  uint64                 `protobuf:"varint,2,opt,name=UserConnId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UserOnlineRequest) Reset() {
	*x = UserOnlineRequest{}
	mi := &file_knet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserOnlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOnlineRequest) ProtoMessage() {}

func (x *UserOnlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UserOnlineRequest) GetUserId() uint64 {
	if x != nil {
		return x.xxx_hidden_UserId
	}
	return 0
}

func (x *UserOnlineRequest) GetUserConnId() uint64 {
	if x != nil {
		return x.xxx_hidden_UserConnId
	}
	return 0
}

func (x *UserOnlineRequest) SetUserId(v uint64) {
	x.xxx_hidden_UserId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UserOnlineRequest) SetUserConnId(v uint64) {
	x.xxx_hidden_UserConnId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UserOnlineRequest) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UserOnlineRequest) HasUserConnId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UserOnlineRequest) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UserId = 0
}

func (x *UserOnlineRequest) ClearUserConnId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserConnId = 0
}

type UserOnlineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	UserId     *uint64
	UserConnId *uint64
}

func (b0 UserOnlineRequest_builder) Build() *UserOnlineRequest {
	m0 := &UserOnlineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_UserId = *b.UserId
	}
	if b.UserConnId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_UserConnId = *b.UserConnId
	}
	return m0
}

type UserOnlineReply struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserOnlineReply) Reset() {
	*x = UserOnlineReply{}
	mi := &file_knet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserOnlineReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOnlineReply) ProtoMessage() {}

func (x *UserOnlineReply) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type UserOnlineReply_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 UserOnlineReply_builder) Build() *UserOnlineReply {
	m0 := &UserOnlineReply{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type UserOfflineNotify struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UserId      uint64                 `protobuf:"varint,1,opt,name=UserId"`
	xxx_hidden_UserConnId  uint64                 `protobuf:"varint,2,opt,name=UserConnId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UserOfflineNotify) Reset() {
	*x = UserOfflineNotify{}
	mi := &file_knet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserOfflineNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOfflineNotify) ProtoMessage() {}

func (x *UserOfflineNotify) ProtoReflect() protoreflect.Message {
	mi := &file_knet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UserOfflineNotify) GetUserId() uint64 {
	if x != nil {
		return x.xxx_hidden_UserId
	}
	return 0
}

func (x *UserOfflineNotify) GetUserConnId() uint64 {
	if x != nil {
		return x.xxx_hidden_UserConnId
	}
	return 0
}

func (x *UserOfflineNotify) SetUserId(v uint64) {
	x.xxx_hidden_UserId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UserOfflineNotify) SetUserConnId(v uint64) {
	x.xxx_hidden_UserConnId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UserOfflineNotify) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UserOfflineNotify) HasUserConnId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UserOfflineNotify) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UserId = 0
}

func (x *UserOfflineNotify) ClearUserConnId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserConnId = 0
}

type UserOfflineNotify_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	UserId     *uint64
	UserConnId *uint64
}

func (b0 UserOfflineNotify_builder) Build() *UserOfflineNotify {
	m0 := &UserOfflineNotify{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_UserId = *b.UserId
	}
	if b.UserConnId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_UserConnId = *b.UserConnId
	}
	return m0
}

var File_knet_proto protoreflect.FileDescriptor

const file_knet_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"knet.proto\x12\x06knetpb\"5\n" +
	"\x05Error\x12\x12\n" +
	"\x04Code\x18\x01 \x01(\x05R\x04Code\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"%\n" +
	"\x0fClientHandshake\x12\x12\n" +
	"\x04Hash\x18\x01 \x01(\x04R\x04Hash\"%\n" +
	"\x0fServerHandshake\x12\x12\n" +
	"\x04Hash\x18\x01 \x01(\x04R\x04Hash\"\x06\n" +
	"\x04Ping\"\x06\n" +
	"\x04Pong\"+\n" +
	"\x0fKickedOutNotify\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"b\n" +
	"\x0eKickOutRequest\x12\x16\n" +
	"\x06UserId\x18\x01 \x01(\x04R\x06UserId\x12\x1e\n" +
	"\n" +
	"UserConnId\x18\x02 \x01(\x04R\n" +
	"UserConnId\x12\x18\n" +
	"\aMessage\x18\x03 \x01(\tR\aMessage\"\x0e\n" +
	"\fKickOutReply\"K\n" +
	"\x11UserOnlineRequest\x12\x16\n" +
	"\x06UserId\x18\x01 \x01(\x04R\x06UserId\x12\x1e\n" +
	"\n" +
	"UserConnId\x18\x02 \x01(\x04R\n" +
	"UserConnId\"\x11\n" +
	"\x0fUserOnlineReply\"K\n" +
	"\x11UserOfflineNotify\x12\x16\n" +
	"\x06UserId\x18\x01 \x01(\x04R\x06UserId\x12\x1e\n" +
	"\n" +
	"UserConnId\x18\x02 \x01(\x04R\n" +
	"UserConnId*\xa3\x01\n" +
	"\x03Msg\x12\v\n" +
	"\aINVALID\x10\x00\x12\x06\n" +
	"\x02OK\x10\x01\x12\t\n" +
	"\x05ERROR\x10\x02\x12\r\n" +
	"\tHANDSHAKE\x10\x03\x12\b\n" +
	"\x04PING\x10\x04\x12\b\n" +
	"\x04PONG\x10\x05\x12\x12\n" +
	"\x0eKICKED_OUT_NTF\x10\v\x12\f\n" +
	"\bKICK_OUT\x10\f\x12\x0f\n" +
	"\vUSER_ONLINE\x10\r\x12\x14\n" +
	"\x10USER_OFFLINE_NTF\x10\x0e\x12\x10\n" +
	"\fRESERVED_END\x10dB\x1eZ\x1cgithub.com/iakud/krpc/knetpbb\beditionsp\xe8\a"

var file_knet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_knet_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_knet_proto_goTypes = []any{
	(Msg)(0),                  // 0: knetpb.Msg
	(*Error)(nil),             // 1: knetpb.Error
	(*ClientHandshake)(nil),   // 2: knetpb.ClientHandshake
	(*ServerHandshake)(nil),   // 3: knetpb.ServerHandshake
	(*Ping)(nil),              // 4: knetpb.Ping
	(*Pong)(nil),              // 5: knetpb.Pong
	(*KickedOutNotify)(nil),   // 6: knetpb.KickedOutNotify
	(*KickOutRequest)(nil),    // 7: knetpb.KickOutRequest
	(*KickOutReply)(nil),      // 8: knetpb.KickOutReply
	(*UserOnlineRequest)(nil), // 9: knetpb.UserOnlineRequest
	(*UserOnlineReply)(nil),   // 10: knetpb.UserOnlineReply
	(*UserOfflineNotify)(nil), // 11: knetpb.UserOfflineNotify
}
var file_knet_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_knet_proto_init() }
func file_knet_proto_init() {
	if File_knet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_knet_proto_rawDesc), len(file_knet_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_knet_proto_goTypes,
		DependencyIndexes: file_knet_proto_depIdxs,
		EnumInfos:         file_knet_proto_enumTypes,
		MessageInfos:      file_knet_proto_msgTypes,
	}.Build()
	File_knet_proto = out.File
	file_knet_proto_goTypes = nil
	file_knet_proto_depIdxs = nil
}
