{{- /* BEGIN DEFINE */ -}}
{{- define "Type"}}
{{- if eq . "bool"}}bool
{{- else if eq . "int32"}}int
{{- else if eq . "sint32"}}int
{{- else if eq . "uint32"}}uint
{{- else if eq . "int64"}}long
{{- else if eq . "sint64"}}long
{{- else if eq . "uint64"}}ulong
{{- else if eq . "sfixed32"}}int
{{- else if eq . "fixed32"}}uint
{{- else if eq . "float"}}float
{{- else if eq . "sfixed64"}}long
{{- else if eq . "fixed64"}}ulong
{{- else if eq . "double"}}double
{{- else if eq . "string"}}string
{{- else if eq . "bytes"}}byte[]
{{- else if eq . "timestamp"}}DateTime
{{- else if eq . "duration"}}TimeSpan
{{- else if eq . "empty"}}object
{{- else}}{{.}}
{{- end}}
{{- end}}
{{- /* LIST TYPE */ -}}
{{- define "ListValueType"}}
{{- if eq .TypeKind "enum"}}{{.Type}}
{{- else if eq .TypeKind "component"}}{{.Type}}
{{- else}}{{template "Type" .Type}}
{{- end}}
{{- end}}
{{- /* MAP TYPE */ -}}
{{- define "MapValueType"}}
{{- if eq .TypeKind "enum"}}{{.Type}}
{{- else if eq .TypeKind "component"}}{{.Type}}
{{- else}}{{template "Type" .Type}}
{{- end}}
{{- end}}

{{- /* ENUM */ -}}
{{- define "Enum"}}
	public enum {{.Name}}
	{
{{- range .EnumFields}}
		{{.Name}} = {{.Value}},
{{- end}}
	}
{{- end}}

{{- /* ENTITY */ -}}
{{- define "Entity"}}
	public class {{.Name}}
	{
		private long _id;
{{- range .Fields}}
{{- if .Repeated}}
		private List<{{template "ListValueType" .}}> _{{.Name}};
{{- else if .Map}}
		private Map<{{.KeyType}}, {{template "MapValueType" .}}> _{{.Name}};
{{- else if eq .TypeKind "component"}}
		private {{.Type}} _{{.Name}};
{{- else}}
		private {{template "Type" .Type}} _{{.Name}};
{{- end}}
{{- end}}

		public {{.Name}}(long id)
		{
			_id = id;
{{- range .Fields}}
{{- if .Repeated}}
			_{{.Name}} = new List<{{template "ListValueType" .}}>();
{{- else if .Map}}
			_{{.Name}} = new Map<{{.KeyType}}, {{template "MapValueType" .}}>();
{{- else if eq .TypeKind "component"}}
			_{{.Name}} = new {{.Type}}();
{{- else}}
{{- end}}
{{- end}}
		}

		public long Id => _id;
{{- range .Fields}}
{{/* EMPTY LINE */}}
{{- if .Repeated}}
		public List<{{template "ListValueType" .}}> {{.Name}}
		{
			get { return _{{.Name}}; }
		}
{{- else if .Map}}
		public Map<{{.KeyType}}, {{template "MapValueType" .}}> {{.Name}}
		{
			get { return _{{.Name}}; }
		}
{{- else if eq .TypeKind "component"}}
		public {{.Type}} {{.Name}}
		{
			get { return _{{.Name}}; }
		}
{{- else}}
		public {{template "Type" .Type}} {{.Name}}
		{
			get { return _{{.Name}}; }
		}
{{- end}}
{{- end}}
	}
{{- end}}

{{- /* COMPONENT */ -}}
{{- define "Component"}}
	public class {{.Name}}
	{
		private long _id;
{{- range .Fields}}
{{- if .Repeated}}
		private List<{{template "ListValueType" .}}> _{{.Name}};
{{- else if .Map}}
		private Map<{{.KeyType}}, {{template "MapValueType" .}}> _{{.Name}};
{{- else if eq .TypeKind "component"}}
		private {{.Type}} _{{.Name}};
{{- else}}
		private {{template "Type" .Type}} _{{.Name}};
{{- end}}
{{- end}}

		public {{.Name}}(long id)
		{
			_id = id;
{{- range .Fields}}
{{- if .Repeated}}
			_{{.Name}} = new List<{{template "ListValueType" .}}>();
{{- else if .Map}}
			_{{.Name}} = new Map<{{.KeyType}}, {{template "MapValueType" .}}>();
{{- else if eq .TypeKind "component"}}
			_{{.Name}} = new {{.Type}}();
{{- else}}
{{- end}}
{{- end}}
		}

		public long Id => _id;
{{- range .Fields}}
{{/* EMPTY LINE */}}
{{- if .Repeated}}
		public List<{{template "ListValueType" .}}> {{.Name}}
		{
			get { return _{{.Name}}; }
		}
{{- else if .Map}}
		public Map<{{.KeyType}}, {{template "MapValueType" .}}> {{.Name}}
		{
			get { return _{{.Name}}; }
		}
{{- else if eq .TypeKind "component"}}
		public {{.Type}} {{.Name}}
		{
			get { return _{{.Name}}; }
		}
{{- else}}
		public {{template "Type" .Type}} {{.Name}}
		{
			get { return _{{.Name}}; }
		}
{{- end}}
{{- end}}
	}
{{- end}}
{{- /* END DEFINE */ -}}
{{- /* BEGIN CS */ -}}
// Code generated by kds. DO NOT EDIT.
// source: {{.SourceFile}}

using System;
using System.Collections.Generic;
using Google.Protobuf;

namespace {{.Package}}
{
{{- /* TOPLEVEL DEFINE */ -}}
{{- range .Defs}}
{{/* EMPTY LINE */}}
{{- if eq .Kind "enum"}}
	{{- template "Enum" .}}
{{- else if eq .Kind "entity"}}
	{{- template "Entity" .}}
{{- else if eq .Kind "component"}}
	{{- template "Component" .}}
{{- end}}
{{- end}}
}
{{/* EMPTY LINE */}}
{{- /* END CS */ -}}